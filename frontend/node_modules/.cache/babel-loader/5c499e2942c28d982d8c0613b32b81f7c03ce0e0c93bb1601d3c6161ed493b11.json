{"ast":null,"code":"var _jsxFileName = \"/Users/ruchireddy/trick-tracker/frontend/src/LiveVideo.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LiveVideo = () => {\n  _s();\n  const videoRef = useRef();\n  useEffect(() => {\n    const fetchVideoStream = async () => {\n      try {\n        const response = await fetch('https://www.earthcam.com/cams/includes/image.php?logo=0&amp;playbutton=0&amp;s=1&amp;img=0RC1tzOXJTEaJtMiEAhICw%3D%3D');\n        if (response.ok) {\n          const stream = await response.blob();\n          videoRef.current.src = URL.createObjectURL(stream);\n        } else {\n          console.error('Failed to fetch video stream:', response.status);\n        }\n      } catch (error) {\n        console.error('Error fetching video stream:', error);\n      }\n    };\n    fetchVideoStream();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"video\", {\n    ref: videoRef,\n    autoPlay: true,\n    controls: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n_s(LiveVideo, \"PdMsmLAy5JKU3vCrhAlqGYQfKuA=\");\n_c = LiveVideo;\nexport default LiveVideo;\nvar _c;\n$RefreshReg$(_c, \"LiveVideo\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","LiveVideo","_s","videoRef","fetchVideoStream","response","fetch","ok","stream","blob","current","src","URL","createObjectURL","console","error","status","ref","autoPlay","controls","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ruchireddy/trick-tracker/frontend/src/LiveVideo.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nconst LiveVideo = () => {\n  const videoRef = useRef();\n\n  useEffect(() => {\n    const fetchVideoStream = async () => {\n      try {\n        const response = await fetch('https://www.earthcam.com/cams/includes/image.php?logo=0&amp;playbutton=0&amp;s=1&amp;img=0RC1tzOXJTEaJtMiEAhICw%3D%3D');\n\n        if (response.ok) {\n          const stream = await response.blob();\n          videoRef.current.src = URL.createObjectURL(stream);\n        } else {\n          console.error('Failed to fetch video stream:', response.status);\n        }\n      } catch (error) {\n        console.error('Error fetching video stream:', error);\n      }\n    };\n\n    fetchVideoStream();\n  }, []);\n\n  return <video ref={videoRef} autoPlay controls />;\n};\n\nexport default LiveVideo;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGL,MAAM,CAAC,CAAC;EAEzBD,SAAS,CAAC,MAAM;IACd,MAAMO,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uHAAuH,CAAC;QAErJ,IAAID,QAAQ,CAACE,EAAE,EAAE;UACf,MAAMC,MAAM,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UACpCN,QAAQ,CAACO,OAAO,CAACC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACL,MAAM,CAAC;QACpD,CAAC,MAAM;UACLM,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEV,QAAQ,CAACW,MAAM,CAAC;QACjE;MACF,CAAC,CAAC,OAAOD,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEDX,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOJ,OAAA;IAAOiB,GAAG,EAAEd,QAAS;IAACe,QAAQ;IAACC,QAAQ;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnD,CAAC;AAACrB,EAAA,CAvBID,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AAyBf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}