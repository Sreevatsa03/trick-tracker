{"ast":null,"code":"var _jsxFileName = \"/Users/ruchireddy/trick-tracker/frontend/src/components/GlobalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\n\n// Create a context for the global variables\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalContext = /*#__PURE__*/createContext();\n\n// Create a provider component to wrap your app with\nfunction GlobalProvider({\n  children\n}) {\n  _s();\n  const [globalVar, setGlobalVar] = useState(false);\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      globalVar,\n      setGlobalVar\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n// Create a custom hook to access and modify global variables\n_s(GlobalProvider, \"oobxQuTiqGbz1MGtOIV/QhSZZCA=\");\n_c = GlobalProvider;\nfunction useGlobal() {\n  _s2();\n  return useContext(GlobalContext);\n}\n_s2(useGlobal, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { GlobalProvider, useGlobal };\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","GlobalContext","GlobalProvider","children","_s","globalVar","setGlobalVar","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobal","_s2","$RefreshReg$"],"sources":["/Users/ruchireddy/trick-tracker/frontend/src/components/GlobalContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\n// Create a context for the global variables\nconst GlobalContext = createContext();\n\n// Create a provider component to wrap your app with\nfunction GlobalProvider({ children }) {\n  const [globalVar, setGlobalVar] = useState(false);\n\n  return (\n    <GlobalContext.Provider value={{ globalVar, setGlobalVar }}>\n      {children}\n    </GlobalContext.Provider>\n  );\n}\n\n// Create a custom hook to access and modify global variables\nfunction useGlobal() {\n  return useContext(GlobalContext);\n}\n\nexport { GlobalProvider, useGlobal };\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;;AAElE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,gBAAGL,aAAa,CAAC,CAAC;;AAErC;AACA,SAASM,cAAcA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEjD,oBACEE,OAAA,CAACC,aAAa,CAACM,QAAQ;IAACC,KAAK,EAAE;MAAEH,SAAS;MAAEC;IAAa,CAAE;IAAAH,QAAA,EACxDA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B;;AAEA;AAAAR,EAAA,CAVSF,cAAc;AAAAW,EAAA,GAAdX,cAAc;AAWvB,SAASY,SAASA,CAAA,EAAG;EAAAC,GAAA;EACnB,OAAOlB,UAAU,CAACI,aAAa,CAAC;AAClC;AAACc,GAAA,CAFQD,SAAS;AAIlB,SAASZ,cAAc,EAAEY,SAAS;AAAG,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}