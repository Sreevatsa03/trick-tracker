{"ast":null,"code":"var _jsxFileName = \"/Users/ruchireddy/trick-tracker/frontend/src/components/TrickDetected.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport React from 'react';\nimport { useGlobal } from './GlobalContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrickDetected = () => {\n  _s();\n  const {\n    globalVar,\n    setGlobalVar\n  } = useGlobal();\n\n  // const [trick, setTrick] = useState(null);\n  // const [conf, setConf] = useState(null);\n\n  const [data, setData] = useState({});\n  const [visible, setVisible] = useState(false);\n  const beginQuery = async () => {\n    await fetch(\"http://127.0.0.1:8000/trick\", {\n      method: 'GET',\n      headers: {\n        accept: 'application/json'\n      }\n    }).then(res => res.json()).then(dataobject => {\n      console.log(dataobject);\n      setData(dataobject);\n    });\n    setVisible(true);\n  };\n  let conf = data[\"Accuracy\"];\n  let trick = data[\"Prediction\"];\n  let percent = parseFloat(conf) * 100;\n  percent = Math.round(percent * 10) / 10;\n  percent.toString();\n  percent = percent + \"%\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [globalVar ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: beginQuery,\n      children: \" Analyze trick \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 24\n    }, this) : null, visible ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"analysis\",\n      children: [trick, \" detected with \", percent, \" accuracy!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 22\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(TrickDetected, \"HjSQq6lRdlcl5vxKe7DOVdNDccw=\", false, function () {\n  return [useGlobal];\n});\n_c = TrickDetected;\nexport default TrickDetected;\nvar _c;\n$RefreshReg$(_c, \"TrickDetected\");","map":{"version":3,"names":["useState","React","useGlobal","jsxDEV","_jsxDEV","TrickDetected","_s","globalVar","setGlobalVar","data","setData","visible","setVisible","beginQuery","fetch","method","headers","accept","then","res","json","dataobject","console","log","conf","trick","percent","parseFloat","Math","round","toString","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/ruchireddy/trick-tracker/frontend/src/components/TrickDetected.js"],"sourcesContent":["import { useState } from \"react\";\nimport React from 'react';\nimport { useGlobal } from './GlobalContext';\n\nconst TrickDetected = () => {\n\n    const { globalVar, setGlobalVar } = useGlobal();\n\n    // const [trick, setTrick] = useState(null);\n    // const [conf, setConf] = useState(null);\n\n    const [data, setData] = useState({});\n    const [visible, setVisible] = useState(false);\n\n\n    const beginQuery = async() => {\n      await fetch(\"http://127.0.0.1:8000/trick\", {\n        method: 'GET',\n        headers: {\n          accept: 'application/json',\n        }\n      }).then((res => res.json())).then(dataobject => {\n        console.log(dataobject);\n        setData(dataobject);\n      })\n\n      setVisible(true);\n\n    }\n        \n    let conf = data[\"Accuracy\"];\n    let trick = data[\"Prediction\"];\n    let percent = parseFloat(conf)*100;\n    percent = Math.round(percent * 10) / 10\n    percent.toString();\n    percent = percent + \"%\";\n\n    return (\n        <div>\n          {globalVar ? <button onClick={beginQuery}> Analyze trick </button> : null}\n          {visible ? <h2 id=\"analysis\">{trick} detected with {percent} accuracy!</h2> : null}\n        </div>\n      );\n\n  \n};\n\nexport default TrickDetected;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAExB,MAAM;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAGN,SAAS,CAAC,CAAC;;EAE/C;EACA;;EAEA,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAG7C,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAW;IAC5B,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MACzCC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,MAAM,EAAE;MACV;IACF,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAE,CAAC,CAACF,IAAI,CAACG,UAAU,IAAI;MAC9CC,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;MACvBX,OAAO,CAACW,UAAU,CAAC;IACrB,CAAC,CAAC;IAEFT,UAAU,CAAC,IAAI,CAAC;EAElB,CAAC;EAED,IAAIY,IAAI,GAAGf,IAAI,CAAC,UAAU,CAAC;EAC3B,IAAIgB,KAAK,GAAGhB,IAAI,CAAC,YAAY,CAAC;EAC9B,IAAIiB,OAAO,GAAGC,UAAU,CAACH,IAAI,CAAC,GAAC,GAAG;EAClCE,OAAO,GAAGE,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,EAAE,CAAC,GAAG,EAAE;EACvCA,OAAO,CAACI,QAAQ,CAAC,CAAC;EAClBJ,OAAO,GAAGA,OAAO,GAAG,GAAG;EAEvB,oBACItB,OAAA;IAAA2B,QAAA,GACGxB,SAAS,gBAAGH,OAAA;MAAQ4B,OAAO,EAAEnB,UAAW;MAAAkB,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,GAAG,IAAI,EACxEzB,OAAO,gBAAGP,OAAA;MAAIiC,EAAE,EAAC,UAAU;MAAAN,QAAA,GAAEN,KAAK,EAAC,iBAAe,EAACC,OAAO,EAAC,YAAU;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,GAAG,IAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/E,CAAC;AAId,CAAC;AAAC9B,EAAA,CAzCID,aAAa;EAAA,QAEqBH,SAAS;AAAA;AAAAoC,EAAA,GAF3CjC,aAAa;AA2CnB,eAAeA,aAAa;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}