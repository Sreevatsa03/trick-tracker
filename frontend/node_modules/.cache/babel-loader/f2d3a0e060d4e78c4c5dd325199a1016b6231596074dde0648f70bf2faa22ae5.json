{"ast":null,"code":"var _jsxFileName = \"/Users/sree/trick-tracker/frontend/src/components/TrickDetected.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrickDetected = () => {\n  _s();\n  const [trick, setTrick] = useState(0);\n  const [conf, setConf] = useState(0);\n  useEffect(() => {\n    // Make a GET request to the Flask API using the fetch API\n    fetch('http://127.0.0.1:8000/trick?Accuracy=${conf}&Prediction=${trick}').then(response => {\n      print(response);\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      // Assuming the response is an object with 'Prediction' and 'Accuracy' properties\n      setTrick(data.Prediction);\n      setConf(data.Accuracy);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, [trick, conf]);\n  if (true) {\n    let percent = conf.toString() + \"%\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [trick, \" detected with \", percent, \" accuracy!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this);\n  }\n};\n_s(TrickDetected, \"qTIdvXc0cldyvXmQiL05xALNkU4=\");\n_c = TrickDetected;\nexport default TrickDetected;\nvar _c;\n$RefreshReg$(_c, \"TrickDetected\");","map":{"version":3,"names":["useEffect","useState","React","jsxDEV","_jsxDEV","TrickDetected","_s","trick","setTrick","conf","setConf","fetch","then","response","print","ok","Error","json","data","Prediction","Accuracy","catch","error","console","percent","toString","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sree/trick-tracker/frontend/src/components/TrickDetected.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport React from 'react';\n\n\nconst TrickDetected = () => {\n\n    const [trick, setTrick] = useState(0)\n    const [conf, setConf] = useState(0)\n\n    useEffect(() => {\n      // Make a GET request to the Flask API using the fetch API\n      fetch('http://127.0.0.1:8000/trick?Accuracy=${conf}&Prediction=${trick}')\n        .then((response) => {\n          print (response);\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        })\n        .then((data) => {\n          // Assuming the response is an object with 'Prediction' and 'Accuracy' properties\n          setTrick(data.Prediction);\n          setConf(data.Accuracy);\n        })\n        .catch((error) => {\n          console.error('Error fetching data:', error);\n        });\n    }, [trick, conf]);\n\n    \n\n    if (true) {\n      let percent = conf.toString() + \"%\"\n      return (\n          <div>\n            <h2>{trick} detected with {percent} accuracy!</h2>\n          </div>\n        );\n    } else {\n        return (<div></div>);\n    }\n\n  \n};\n\nexport default TrickDetected;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAExB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACd;IACAW,KAAK,CAAC,kEAAkE,CAAC,CACtEC,IAAI,CAAEC,QAAQ,IAAK;MAClBC,KAAK,CAAED,QAAQ,CAAC;MAChB,IAAI,CAACA,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDL,IAAI,CAAEM,IAAI,IAAK;MACd;MACAV,QAAQ,CAACU,IAAI,CAACC,UAAU,CAAC;MACzBT,OAAO,CAACQ,IAAI,CAACE,QAAQ,CAAC;IACxB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,CAACf,KAAK,EAAEE,IAAI,CAAC,CAAC;EAIjB,IAAI,IAAI,EAAE;IACR,IAAIe,OAAO,GAAGf,IAAI,CAACgB,QAAQ,CAAC,CAAC,GAAG,GAAG;IACnC,oBACIrB,OAAA;MAAAsB,QAAA,eACEtB,OAAA;QAAAsB,QAAA,GAAKnB,KAAK,EAAC,iBAAe,EAACiB,OAAO,EAAC,YAAU;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC;EAEZ,CAAC,MAAM;IACH,oBAAQ1B,OAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EACvB;AAGJ,CAAC;AAACxB,EAAA,CAvCID,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AAyCnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}