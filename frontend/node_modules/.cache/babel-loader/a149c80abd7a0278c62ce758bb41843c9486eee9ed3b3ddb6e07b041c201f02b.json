{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tools_1 = require(\"./tools\");\nvar int64_buffer_1 = require(\"int64-buffer\");\nvar tools = require(\"./tools\");\nvar schema = require(\"matroska/lib/schema\");\nvar byEbmlID = schema.byEbmlID;\n// https://www.matroska.org/technical/specs/index.html\nvar State;\n(function (State) {\n  State[State[\"STATE_TAG\"] = 1] = \"STATE_TAG\";\n  State[State[\"STATE_SIZE\"] = 2] = \"STATE_SIZE\";\n  State[State[\"STATE_CONTENT\"] = 3] = \"STATE_CONTENT\";\n})(State || (State = {}));\nvar EBMLDecoder = function () {\n  function EBMLDecoder() {\n    this._buffer = new tools_1.Buffer(0);\n    this._tag_stack = [];\n    this._state = State.STATE_TAG;\n    this._cursor = 0;\n    this._total = 0;\n    this._schema = byEbmlID;\n    this._result = [];\n  }\n  EBMLDecoder.prototype.decode = function (chunk) {\n    this.readChunk(chunk);\n    var diff = this._result;\n    this._result = [];\n    return diff;\n  };\n  EBMLDecoder.prototype.readChunk = function (chunk) {\n    // 読みかけの(読めなかった) this._buffer と 新しい chunk を合わせて読み直す\n    this._buffer = tools.concat([this._buffer, new tools_1.Buffer(chunk)]);\n    while (this._cursor < this._buffer.length) {\n      // console.log(this._cursor, this._total, this._tag_stack);\n      if (this._state === State.STATE_TAG && !this.readTag()) {\n        break;\n      }\n      if (this._state === State.STATE_SIZE && !this.readSize()) {\n        break;\n      }\n      if (this._state === State.STATE_CONTENT && !this.readContent()) {\n        break;\n      }\n    }\n  };\n  EBMLDecoder.prototype.getSchemaInfo = function (tagNum) {\n    return this._schema[tagNum] || {\n      name: \"unknown\",\n      level: -1,\n      type: \"unknown\",\n      description: \"unknown\"\n    };\n  };\n  /**\n   * vint された parsing tag\n   * @return - return false when waiting for more data\n   */\n  EBMLDecoder.prototype.readTag = function () {\n    // tag.length が buffer の外にある\n    if (this._cursor >= this._buffer.length) {\n      return false;\n    }\n    // read ebml id vint without first byte\n    var tag = tools_1.readVint(this._buffer, this._cursor);\n    // tag が読めなかった\n    if (tag == null) {\n      return false;\n    }\n    // >>>>>>>>>\n    // tag 識別子\n    //const tagStr = this._buffer.toString(\"hex\", this._cursor, this._cursor + tag.length);\n    //const tagNum = parseInt(tagStr, 16);\n    // 上と等価\n    var buf = this._buffer.slice(this._cursor, this._cursor + tag.length);\n    var tagNum = buf.reduce(function (o, v, i, arr) {\n      return o + v * Math.pow(16, 2 * (arr.length - 1 - i));\n    }, 0);\n    var schema = this.getSchemaInfo(tagNum);\n    var tagObj = {\n      EBML_ID: tagNum.toString(16),\n      schema: schema,\n      type: schema.type,\n      name: schema.name,\n      level: schema.level,\n      tagStart: this._total,\n      tagEnd: this._total + tag.length,\n      sizeStart: this._total + tag.length,\n      sizeEnd: null,\n      dataStart: null,\n      dataEnd: null,\n      dataSize: null,\n      data: null\n    };\n    // | tag: vint | size: vint | data: Buffer(size) |\n    this._tag_stack.push(tagObj);\n    // <<<<<<<<\n    // ポインタを進める\n    this._cursor += tag.length;\n    this._total += tag.length;\n    // 読み込み状態変更\n    this._state = State.STATE_SIZE;\n    return true;\n  };\n  /**\n   * vint された現在のタグの内容の大きさを読み込む\n   * @return - return false when waiting for more data\n   */\n  EBMLDecoder.prototype.readSize = function () {\n    // tag.length が buffer の外にある\n    if (this._cursor >= this._buffer.length) {\n      return false;\n    }\n    // read ebml datasize vint without first byte\n    var size = tools_1.readVint(this._buffer, this._cursor);\n    // まだ読めない\n    if (size == null) {\n      return false;\n    }\n    // >>>>>>>>>\n    // current tag の data size 決定\n    var tagObj = this._tag_stack[this._tag_stack.length - 1];\n    tagObj.sizeEnd = tagObj.sizeStart + size.length;\n    tagObj.dataStart = tagObj.sizeEnd;\n    tagObj.dataSize = size.value;\n    if (size.value === -1) {\n      // unknown size\n      tagObj.dataEnd = -1;\n      if (tagObj.type === \"m\") {\n        tagObj.unknownSize = true;\n      }\n    } else {\n      tagObj.dataEnd = tagObj.sizeEnd + size.value;\n    }\n    // <<<<<<<<\n    // ポインタを進める\n    this._cursor += size.length;\n    this._total += size.length;\n    this._state = State.STATE_CONTENT;\n    return true;\n  };\n  /**\n   * データ読み込み\n   */\n  EBMLDecoder.prototype.readContent = function () {\n    var tagObj = this._tag_stack[this._tag_stack.length - 1];\n    // master element は子要素を持つので生データはない\n    if (tagObj.type === 'm') {\n      // console.log('content should be tags');\n      tagObj.isEnd = false;\n      this._result.push(tagObj);\n      this._state = State.STATE_TAG;\n      // この Mastert Element は空要素か\n      if (tagObj.dataSize === 0) {\n        // 即座に終了タグを追加\n        var elm = Object.assign({}, tagObj, {\n          isEnd: true\n        });\n        this._result.push(elm);\n        this._tag_stack.pop(); // スタックからこのタグを捨てる\n      }\n\n      return true;\n    }\n    // waiting for more data\n    if (this._buffer.length < this._cursor + tagObj.dataSize) {\n      return false;\n    }\n    // タグの中身の生データ\n    var data = this._buffer.slice(this._cursor, this._cursor + tagObj.dataSize);\n    // 読み終わったバッファを捨てて読み込んでいる部分のバッファのみ残す\n    this._buffer = this._buffer.slice(this._cursor + tagObj.dataSize);\n    tagObj.data = data;\n    // >>>>>>>>>\n    switch (tagObj.type) {\n      //case \"m\": break;\n      // Master-Element - contains other EBML sub-elements of the next lower level\n      case \"u\":\n        tagObj.value = data.readUIntBE(0, data.length);\n        break;\n      // Unsigned Integer - Big-endian, any size from 1 to 8 octets\n      case \"i\":\n        tagObj.value = data.readIntBE(0, data.length);\n        break;\n      // Signed Integer - Big-endian, any size from 1 to 8 octets\n      case \"f\":\n        tagObj.value = tagObj.dataSize === 4 ? data.readFloatBE(0) : tagObj.dataSize === 8 ? data.readDoubleBE(0) : (console.warn(\"cannot read \" + tagObj.dataSize + \" octets float. failback to 0\"), 0);\n        break;\n      // Float - Big-endian, defined for 4 and 8 octets (32, 64 bits)\n      case \"s\":\n        tagObj.value = data.toString(\"ascii\");\n        break;\n      // ascii\n      //  Printable ASCII (0x20 to 0x7E), zero-padded when needed\n      case \"8\":\n        tagObj.value = data.toString(\"utf8\");\n        break;\n      //  Unicode string, zero padded when needed (RFC 2279)\n      case \"b\":\n        tagObj.value = data;\n        break;\n      // Binary - not interpreted by the parser\n      case \"d\":\n        tagObj.value = tools_1.convertEBMLDateToJSDate(new int64_buffer_1.Int64BE(data).toNumber());\n        break;\n    }\n    if (tagObj.value === null) {\n      throw new Error(\"unknown tag type:\" + tagObj.type);\n    }\n    this._result.push(tagObj);\n    // <<<<<<<<\n    // ポインタを進める\n    this._total += tagObj.dataSize;\n    // タグ待ちモードに変更\n    this._state = State.STATE_TAG;\n    this._cursor = 0;\n    this._tag_stack.pop(); // remove the object from the stack\n    while (this._tag_stack.length > 0) {\n      var topEle = this._tag_stack[this._tag_stack.length - 1];\n      // 親が不定長サイズなので閉じタグは期待できない\n      if (topEle.dataEnd < 0) {\n        this._tag_stack.pop(); // 親タグを捨てる\n        return true;\n      }\n      // 閉じタグの来るべき場所まで来たかどうか\n      if (this._total < topEle.dataEnd) {\n        break;\n      }\n      // 閉じタグを挿入すべきタイミングが来た\n      if (topEle.type !== \"m\") {\n        throw new Error(\"parent element is not master element\");\n      }\n      var elm = Object.assign({}, topEle, {\n        isEnd: true\n      });\n      this._result.push(elm);\n      this._tag_stack.pop();\n    }\n    return true;\n  };\n  return EBMLDecoder;\n}();\nexports.default = EBMLDecoder;","map":{"version":3,"names":["Object","defineProperty","exports","value","tools_1","require","int64_buffer_1","tools","schema","byEbmlID","State","EBMLDecoder","_buffer","Buffer","_tag_stack","_state","STATE_TAG","_cursor","_total","_schema","_result","prototype","decode","chunk","readChunk","diff","concat","length","readTag","STATE_SIZE","readSize","STATE_CONTENT","readContent","getSchemaInfo","tagNum","name","level","type","description","tag","readVint","buf","slice","reduce","o","v","i","arr","Math","pow","tagObj","EBML_ID","toString","tagStart","tagEnd","sizeStart","sizeEnd","dataStart","dataEnd","dataSize","data","push","size","unknownSize","isEnd","elm","assign","pop","readUIntBE","readIntBE","readFloatBE","readDoubleBE","console","warn","convertEBMLDateToJSDate","Int64BE","toNumber","Error","topEle","default"],"sources":["/Users/ruchireddy/trick-tracker/frontend/node_modules/ts-ebml/lib/EBMLDecoder.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tools_1 = require(\"./tools\");\nvar int64_buffer_1 = require(\"int64-buffer\");\nvar tools = require(\"./tools\");\nvar schema = require(\"matroska/lib/schema\");\nvar byEbmlID = schema.byEbmlID;\n// https://www.matroska.org/technical/specs/index.html\nvar State;\n(function (State) {\n    State[State[\"STATE_TAG\"] = 1] = \"STATE_TAG\";\n    State[State[\"STATE_SIZE\"] = 2] = \"STATE_SIZE\";\n    State[State[\"STATE_CONTENT\"] = 3] = \"STATE_CONTENT\";\n})(State || (State = {}));\nvar EBMLDecoder = (function () {\n    function EBMLDecoder() {\n        this._buffer = new tools_1.Buffer(0);\n        this._tag_stack = [];\n        this._state = State.STATE_TAG;\n        this._cursor = 0;\n        this._total = 0;\n        this._schema = byEbmlID;\n        this._result = [];\n    }\n    EBMLDecoder.prototype.decode = function (chunk) {\n        this.readChunk(chunk);\n        var diff = this._result;\n        this._result = [];\n        return diff;\n    };\n    EBMLDecoder.prototype.readChunk = function (chunk) {\n        // 読みかけの(読めなかった) this._buffer と 新しい chunk を合わせて読み直す\n        this._buffer = tools.concat([this._buffer, new tools_1.Buffer(chunk)]);\n        while (this._cursor < this._buffer.length) {\n            // console.log(this._cursor, this._total, this._tag_stack);\n            if (this._state === State.STATE_TAG && !this.readTag()) {\n                break;\n            }\n            if (this._state === State.STATE_SIZE && !this.readSize()) {\n                break;\n            }\n            if (this._state === State.STATE_CONTENT && !this.readContent()) {\n                break;\n            }\n        }\n    };\n    EBMLDecoder.prototype.getSchemaInfo = function (tagNum) {\n        return this._schema[tagNum] || {\n            name: \"unknown\",\n            level: -1,\n            type: \"unknown\",\n            description: \"unknown\"\n        };\n    };\n    /**\n     * vint された parsing tag\n     * @return - return false when waiting for more data\n     */\n    EBMLDecoder.prototype.readTag = function () {\n        // tag.length が buffer の外にある\n        if (this._cursor >= this._buffer.length) {\n            return false;\n        }\n        // read ebml id vint without first byte\n        var tag = tools_1.readVint(this._buffer, this._cursor);\n        // tag が読めなかった\n        if (tag == null) {\n            return false;\n        }\n        // >>>>>>>>>\n        // tag 識別子\n        //const tagStr = this._buffer.toString(\"hex\", this._cursor, this._cursor + tag.length);\n        //const tagNum = parseInt(tagStr, 16);\n        // 上と等価\n        var buf = this._buffer.slice(this._cursor, this._cursor + tag.length);\n        var tagNum = buf.reduce(function (o, v, i, arr) { return o + v * Math.pow(16, 2 * (arr.length - 1 - i)); }, 0);\n        var schema = this.getSchemaInfo(tagNum);\n        var tagObj = {\n            EBML_ID: tagNum.toString(16),\n            schema: schema,\n            type: schema.type,\n            name: schema.name,\n            level: schema.level,\n            tagStart: this._total,\n            tagEnd: this._total + tag.length,\n            sizeStart: this._total + tag.length,\n            sizeEnd: null,\n            dataStart: null,\n            dataEnd: null,\n            dataSize: null,\n            data: null\n        };\n        // | tag: vint | size: vint | data: Buffer(size) |\n        this._tag_stack.push(tagObj);\n        // <<<<<<<<\n        // ポインタを進める\n        this._cursor += tag.length;\n        this._total += tag.length;\n        // 読み込み状態変更\n        this._state = State.STATE_SIZE;\n        return true;\n    };\n    /**\n     * vint された現在のタグの内容の大きさを読み込む\n     * @return - return false when waiting for more data\n     */\n    EBMLDecoder.prototype.readSize = function () {\n        // tag.length が buffer の外にある\n        if (this._cursor >= this._buffer.length) {\n            return false;\n        }\n        // read ebml datasize vint without first byte\n        var size = tools_1.readVint(this._buffer, this._cursor);\n        // まだ読めない\n        if (size == null) {\n            return false;\n        }\n        // >>>>>>>>>\n        // current tag の data size 決定\n        var tagObj = this._tag_stack[this._tag_stack.length - 1];\n        tagObj.sizeEnd = tagObj.sizeStart + size.length;\n        tagObj.dataStart = tagObj.sizeEnd;\n        tagObj.dataSize = size.value;\n        if (size.value === -1) {\n            // unknown size\n            tagObj.dataEnd = -1;\n            if (tagObj.type === \"m\") {\n                tagObj.unknownSize = true;\n            }\n        }\n        else {\n            tagObj.dataEnd = tagObj.sizeEnd + size.value;\n        }\n        // <<<<<<<<\n        // ポインタを進める\n        this._cursor += size.length;\n        this._total += size.length;\n        this._state = State.STATE_CONTENT;\n        return true;\n    };\n    /**\n     * データ読み込み\n     */\n    EBMLDecoder.prototype.readContent = function () {\n        var tagObj = this._tag_stack[this._tag_stack.length - 1];\n        // master element は子要素を持つので生データはない\n        if (tagObj.type === 'm') {\n            // console.log('content should be tags');\n            tagObj.isEnd = false;\n            this._result.push(tagObj);\n            this._state = State.STATE_TAG;\n            // この Mastert Element は空要素か\n            if (tagObj.dataSize === 0) {\n                // 即座に終了タグを追加\n                var elm = Object.assign({}, tagObj, { isEnd: true });\n                this._result.push(elm);\n                this._tag_stack.pop(); // スタックからこのタグを捨てる\n            }\n            return true;\n        }\n        // waiting for more data\n        if (this._buffer.length < this._cursor + tagObj.dataSize) {\n            return false;\n        }\n        // タグの中身の生データ\n        var data = this._buffer.slice(this._cursor, this._cursor + tagObj.dataSize);\n        // 読み終わったバッファを捨てて読み込んでいる部分のバッファのみ残す\n        this._buffer = this._buffer.slice(this._cursor + tagObj.dataSize);\n        tagObj.data = data;\n        // >>>>>>>>>\n        switch (tagObj.type) {\n            //case \"m\": break;\n            // Master-Element - contains other EBML sub-elements of the next lower level\n            case \"u\":\n                tagObj.value = data.readUIntBE(0, data.length);\n                break;\n            // Unsigned Integer - Big-endian, any size from 1 to 8 octets\n            case \"i\":\n                tagObj.value = data.readIntBE(0, data.length);\n                break;\n            // Signed Integer - Big-endian, any size from 1 to 8 octets\n            case \"f\":\n                tagObj.value = tagObj.dataSize === 4 ? data.readFloatBE(0) :\n                    tagObj.dataSize === 8 ? data.readDoubleBE(0) :\n                        (console.warn(\"cannot read \" + tagObj.dataSize + \" octets float. failback to 0\"), 0);\n                break;\n            // Float - Big-endian, defined for 4 and 8 octets (32, 64 bits)\n            case \"s\":\n                tagObj.value = data.toString(\"ascii\");\n                break; // ascii\n            //  Printable ASCII (0x20 to 0x7E), zero-padded when needed\n            case \"8\":\n                tagObj.value = data.toString(\"utf8\");\n                break;\n            //  Unicode string, zero padded when needed (RFC 2279)\n            case \"b\":\n                tagObj.value = data;\n                break;\n            // Binary - not interpreted by the parser\n            case \"d\":\n                tagObj.value = tools_1.convertEBMLDateToJSDate(new int64_buffer_1.Int64BE(data).toNumber());\n                break;\n        }\n        if (tagObj.value === null) {\n            throw new Error(\"unknown tag type:\" + tagObj.type);\n        }\n        this._result.push(tagObj);\n        // <<<<<<<<\n        // ポインタを進める\n        this._total += tagObj.dataSize;\n        // タグ待ちモードに変更\n        this._state = State.STATE_TAG;\n        this._cursor = 0;\n        this._tag_stack.pop(); // remove the object from the stack\n        while (this._tag_stack.length > 0) {\n            var topEle = this._tag_stack[this._tag_stack.length - 1];\n            // 親が不定長サイズなので閉じタグは期待できない\n            if (topEle.dataEnd < 0) {\n                this._tag_stack.pop(); // 親タグを捨てる\n                return true;\n            }\n            // 閉じタグの来るべき場所まで来たかどうか\n            if (this._total < topEle.dataEnd) {\n                break;\n            }\n            // 閉じタグを挿入すべきタイミングが来た\n            if (topEle.type !== \"m\") {\n                throw new Error(\"parent element is not master element\");\n            }\n            var elm = Object.assign({}, topEle, { isEnd: true });\n            this._result.push(elm);\n            this._tag_stack.pop();\n        }\n        return true;\n    };\n    return EBMLDecoder;\n}());\nexports.default = EBMLDecoder;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}