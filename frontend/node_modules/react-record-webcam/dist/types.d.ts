/// <reference types="react" />
declare type AudioCodec = 'aac' | 'opus';
declare type VideoCodec = 'av1' | 'avc' | 'vp8';
export declare type FileMimeType = 'video/mp4' | 'video/webm';
export declare type FileType = 'mp4' | 'webm';
export declare type RecordingOptions = {
    mimeType: FileMimeType;
};
export declare type RecorderOptions = {
    aspectRatio: number;
    height: number;
    type: 'video';
    width: number;
    isNewSize?: boolean;
    mimeType?: string;
    mute?: boolean;
    disableLogs?: boolean;
};
export declare type RecordWebcamOptions = {
    codec?: {
        audio: AudioCodec;
        video: VideoCodec;
    };
    filename?: string;
    recordingLength?: number;
    fileType?: FileType;
    width?: number;
    height?: number;
    aspectRatio?: number;
};
export declare type WebcamRenderProps = {
    isPreview: boolean;
    isRecording: boolean;
    isWebcamOn: boolean;
    status: string;
    closeCamera(): void;
    download(): void;
    getRecording(): Blob | undefined;
    openCamera(): void;
    retake(): void;
    start(): void;
    stop(): void;
};
export declare type RecordWebcamHook = {
    previewRef: React.RefObject<HTMLVideoElement>;
    status: string | number;
    webcamRef: React.RefObject<HTMLVideoElement>;
    close(): void;
    download(): void;
    getRecording(): void;
    open(): void;
    retake(): void;
    start(): void;
    stop(): void;
    stopStream(): void;
};
export declare type Recorder = {
    stream: any;
    getBlob(): Promise<Blob>;
    getDataURL(): Promise<string>;
    startRecording(): Promise<void>;
    stopRecording(): Promise<void>;
};
export {};
